// src/CalendarLogic.ts

// App.tsx'den tip tanÄ±mÄ±nÄ± alÄ±yoruz
interface CycleSettings {
    cycleLength: number; 
    periodLength: number; 
}

// YardÄ±mcÄ± Fonksiyon: Bir Tarihe GÃ¼n Ekleme
const addDays = (date: Date, days: number): Date => {
  const newDate = new Date(date);
  newDate.setDate(date.getDate() + days);
  return newDate;
};

// ðŸ©¸ DÃ¶ngÃ¼ Tahminlerini Hesaplayan Ana Fonksiyon
export const calculateCyclePredictions = (
  lastPeriodDate: string, // ISO formatÄ±: YYYY-MM-DD
  settings: CycleSettings
) => {
  if (!lastPeriodDate || settings.cycleLength <= 0 || settings.periodLength <= 0) return null;

  // Son regl tarihini Date objesine Ã§evir
  const lastPeriod = new Date(lastPeriodDate);
  
  // EÄŸer tarih geÃ§erli deÄŸilse
  if (isNaN(lastPeriod.getTime())) return null;


  // 1. Sonraki Regl BaÅŸlangÄ±Ã§ Tahmini
  // Son regl tarihi + DÃ¶ngÃ¼ UzunluÄŸu
  const nextPeriodStart = addDays(lastPeriod, settings.cycleLength);
  
  // 2. Regl BitiÅŸ Tahmini
  // Sonraki regl baÅŸlangÄ±cÄ± + Regl SÃ¼resi (bitiÅŸi dahil etmek iÃ§in -1)
  const nextPeriodEnd = addDays(nextPeriodStart, settings.periodLength - 1); 
  
  // 3. Yumurtlama (OvÃ¼lasyon) Tahmini
  // Yumurtlama genellikle bir sonraki regl tarihinden 14 gÃ¼n Ã¶nce olur.
  // Bu mantÄ±k Ã§oÄŸu uygulama tarafÄ±ndan kullanÄ±lÄ±r.
  const ovulationDay = addDays(nextPeriodStart, -14);
  
  // 4. DoÄŸurgan Pencere Tahmini
  // DoÄŸurganlÄ±k penceresi, ovÃ¼lasyon tarihinden 5 gÃ¼n Ã¶ncesi (6 gÃ¼n) baÅŸlar ve ovÃ¼lasyonun ertesi gÃ¼nÃ¼ biter.
  const fertileWindowStart = addDays(ovulationDay, -5); 
  const fertileWindowEnd = addDays(ovulationDay, 1); 

  // Tahminleri YYYY-MM-DD formatÄ±nda dÄ±ÅŸa aktar
  const formatDate = (date: Date): string => date.toISOString().split('T')[0];

  return {
    nextPeriodStart: formatDate(nextPeriodStart),
    nextPeriodEnd: formatDate(nextPeriodEnd),
    ovulationDay: formatDate(ovulationDay),
    fertileWindowStart: formatDate(fertileWindowStart),
    fertileWindowEnd: formatDate(fertileWindowEnd),
    cycleLength: settings.cycleLength,
  };
};
